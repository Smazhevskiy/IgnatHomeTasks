{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h2/Affair.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h12/HW12.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.module.css","p2-homeworks/h11/common/c7-SuperRange/SuperRange.module.css","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h10/bll/loadingReducer.ts","p2-homeworks/h10/common/loading.gif","p2-homeworks/h10/HW10.tsx","p2-homeworks/h11/common/c7-SuperRange/SuperRange.tsx","p2-homeworks/h11/common/c8-SuperDoubleRange/SuperDoubleRange.tsx","p2-homeworks/h11/HW11.tsx","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.tsx","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.tsx","p2-homeworks/h7/HW7.tsx","p2-homeworks/h9/Clock.tsx","p2-homeworks/h9/HW9.tsx","p2-homeworks/h8/bll/homeWorkReducer.ts","p2-homeworks/h8/HW8.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h12/bll/themeReducer.ts","p2-homeworks/h12/HW12.tsx","p2-homeworks/h13/api/requestAPI.ts","p2-homeworks/h13/Request.tsx","p2-homeworks/h13/HW13.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","p2-homeworks/h10/bll/store.ts","index.tsx","p2-homeworks/h5/Header.module.css"],"names":["module","exports","Error404","Message","props","className","classes","post","src","avatar","alt","message","name","text","time","messageData","HW1","Affair","s","affair","priority","button","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","buttons","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","someClass","value","onChange","GreetingContainer","users","addUserCallback","setName","setError","length","e","trimName","currentTarget","trim","alert","HW3","v1","setUsers","newUser","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","input","errorInput","superInput","key","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","setText","showAlert","setChecked","column","blue","disabled","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","style","spanStyle","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","undefined","PreJunior","initState","isLoading","loadingAC","HW10","dispatch","useDispatch","useSelector","loading","preloaderGif","start","setTimeout","clearTimeout","console","log","SuperRange","onChangeRange","finalRangeClassName","range","SuperDoubleRange","HW11","value1","value2","SuperSelect","options","onChangeOption","mappedOptions","el","index","SuperRadio","onChangeCallback","o","i","arr","HW7","Clock","timerId","setTimerId","date","setDate","show","setShow","stringTime","toLocaleTimeString","stringDate","toLocaleDateString","onMouseEnter","onMouseLeave","id","window","setInterval","Date","clearInterval","HW9","homeWorkReducer","action","newState","sort","b","payload","reverse","age","initialPeople","HW8","people","setPeople","finalPeople","p","width","border","display","justifyContent","margin","themes","HW12","React","memo","theme","colorTheme","mappedThemes","th","instance","axios","create","baseURL","authAPI","body","Request","setCheckbox","view","setView","handleSendButton","success","response","info","HW13","PATH","Routes","path","exact","render","to","Junior","JuniorPlus","Header","header","link","activeClassName","active","block","HW5","App","Boolean","location","hostname","match","rootReducer","combineReducers","store","createStore","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"0FACAA,EAAOC,QAAU,CAAC,KAAO,sBAAsB,QAAU,yBAAyB,KAAO,sBAAsB,KAAO,sBAAsB,KAAO,wB,mBCAnJD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,qBAAqB,SAAW,yBAAyB,OAAS,yB,mBCA3HD,EAAOC,QAAU,CAAC,MAAQ,8BAA8B,WAAa,mCAAmC,WAAa,mCAAmC,MAAQ,gC,mBCAhKD,EAAOC,QAAU,CAAC,QAAU,6BAA6B,IAAM,yBAAyB,OAAS,4BAA4B,MAAQ,6B,mBCArID,EAAOC,QAAU,CAAC,UAAY,4BAA4B,MAAQ,0B,mBCAlED,EAAOC,QAAU,CAAC,KAAO,kBAAkB,OAAS,oBAAoB,cAAgB,6B,mBCAxFD,EAAOC,QAAU,CAAC,SAAW,gCAAgC,cAAgB,uC,mBCA7ED,EAAOC,QAAU,CAAC,KAAO,mBAAmB,YAAY,wBAAwB,IAAM,kBAAkB,WAAW,uBAAuB,KAAO,mBAAmB,YAAY,0B,mBCAhLD,EAAOC,QAAU,CAAC,IAAM,mB,mBCAxBD,EAAOC,QAAU,CAAC,QAAU,2B,mBCA5BD,EAAOC,QAAU,CAAC,UAAY,uC,mBCA9BD,EAAOC,QAAU,CAAC,MAAQ,4B,gKCWXC,MAVf,WACI,OACI,gCACI,sCACA,kDACA,uF,iBCiBGC,EAbC,SAACC,GACb,OACI,sBAAKC,UAAWC,IAAQC,KAAxB,UACI,qBAAKC,IAAKJ,EAAMK,OAAQC,IAAI,WAC5B,sBAAKL,UAAWC,IAAQK,QAAxB,UACI,qBAAKN,UAAWC,IAAQM,KAAxB,SAA+BR,EAAMQ,OACrC,qBAAKP,UAAWC,IAAQO,KAAxB,SAA+BT,EAAMO,UACrC,qBAAKN,UAAWC,IAAQQ,KAAxB,SAA+BV,EAAMU,cCf/CC,EACM,qFADNA,EAEI,YAFJA,EAGO,YAHPA,EAII,QA2BKC,MAxBf,WACI,OACI,gCACI,uBADJ,cAGI,uBAIA,cAAC,EAAD,CACIP,OAAQM,EACRH,KAAMG,EACNJ,QAASI,EACTD,KAAMC,IAGV,uBAGA,2B,wBCFGE,MAhBf,SAAgBb,GAOZ,OACI,sBAAKC,UAAWa,IAAEC,OAAlB,UACI,uBAAMd,UAAWa,IAAEN,KAAnB,cAA2BR,EAAMe,OAAOP,QACxC,uBAAMP,UAAWa,IAAEE,SAAnB,eAAgChB,EAAMe,OAAOC,YAC7C,wBAAQf,UAAWa,IAAEG,OAAQC,QARd,WACnBlB,EAAMmB,qBAAqBnB,EAAMe,OAAOK,MAOpC,mB,iBCsBGC,MAhCf,SAAiBrB,GACb,IAAMsB,EAAgBtB,EAAMuB,KAAKC,KAAI,SAACC,GAAD,OACjC,cAAC,EAAD,CAEIV,OAAQU,EACRN,qBAAsBnB,EAAMmB,sBAFvBM,EAAEL,QAkBf,OACI,sBAAKnB,UAAWa,IAAEY,QAAlB,UACKJ,EACD,wBAAQJ,QAfD,WACXlB,EAAM2B,UAAU,QAcZ,iBACA,wBAAQT,QAbA,WACZlB,EAAM2B,UAAU,SAYZ,kBACA,wBAAQT,QAXE,WACdlB,EAAM2B,UAAU,WAUZ,oBACA,wBAAQT,QATD,WACXlB,EAAM2B,UAAU,QAQZ,qBC1BNC,EAAoC,CACtC,CAACR,IAAK,EAAGZ,KAAM,QAASQ,SAAU,QAClC,CAACI,IAAK,EAAGZ,KAAM,QAASQ,SAAU,OAClC,CAACI,IAAK,EAAGZ,KAAM,QAASQ,SAAU,OAClC,CAACI,IAAK,EAAGZ,KAAM,OAAQQ,SAAU,QACjC,CAACI,IAAK,EAAGZ,KAAM,aAAcQ,SAAU,WAwC5Ba,MA5Bf,WAAgB,IAAD,EACmBC,mBAA4BF,GAD/C,mBACJG,EADI,KACKC,EADL,OAEiBF,mBAAqB,OAFtC,mBAEJG,EAFI,KAEIN,EAFJ,KAILO,EAZmB,SAACH,EAA4BE,GACtD,MAAe,QAAXA,EAAyBF,EACjBA,EAAQE,QAAO,SAAAR,GAAC,OAAIA,EAAET,WAAaiB,KAUvBE,CAAcJ,EAASE,GAG/C,OACI,gCACI,uBADJ,cAKI,cAAC,EAAD,CACIV,KAAMW,EACNP,UAAWA,EACXR,qBAXiB,SAACC,GAAD,OAAiBY,EATtB,SAACD,EAA4BX,GACrD,OAAOW,EAAQE,QAAO,SAAAR,GAAC,OAAIA,EAAEL,MAAQA,KAQoBgB,CAAaL,EAASX,KAYnEa,OAAQA,IAGZ,uBAGA,2B,yBCrBGI,EAnB+B,SAAC,GAEzC,IADD7B,EACA,EADAA,KAAM8B,EACN,EADMA,gBAAiBC,EACvB,EADuBA,QAASC,EAChC,EADgCA,MAAOC,EACvC,EADuCA,WAElCC,EAAaF,EAAO1B,IAAE0B,MAAQ1B,IAAE6B,UAEtC,OACI,gCACI,uBACIC,MAAOpC,EACPqC,SAAUP,EACVrC,UAAWyC,IAEf,+BAAOF,IACP,wBAAQtB,QAASqB,EAAjB,sBACA,+BAAOE,QCwBJK,EAnCiD,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,gBAAqB,EACpElB,mBAAiB,IADmD,mBACrFtB,EADqF,KAC/EyC,EAD+E,OAElEnB,mBAAc,IAFoD,mBAErFU,EAFqF,KAE9EU,EAF8E,KAqBpFT,EAAaM,EAAMI,OAGzB,OACI,cAAC,EAAD,CACI3C,KAAMA,EACN8B,gBAtBgB,SAACc,GACrB,IAAMC,EAAWD,EAAEE,cAAcV,MAAMW,OACnCF,GACAJ,EAAQI,GACRH,EAAS,KAETA,EAAS,cAiBTX,QAdQ,WACZS,EAAgBxC,GAChBgD,MAAM,YAAD,OAAahD,IAClByC,EAAQ,KAYJT,MAAOA,EACPC,WAAYA,K,QCPTgB,MA5Bf,WAAgB,IAAD,EACe3B,mBAAc,CACpC,CAACV,IAAKsC,cAAMlD,KAAM,QAClB,CAACY,IAAKsC,cAAMlD,KAAM,SAClB,CAACY,IAAKsC,cAAMlD,KAAM,UAJX,mBACJuC,EADI,KACGY,EADH,KAYX,OACI,gCACI,uBADJ,cAKI,cAAC,EAAD,CAAmBZ,MAAOA,EAAOC,gBAXjB,SAACxC,GACrB,IAAIoD,EAAoB,CAACxC,IAAKsC,cAAMlD,QACpCmD,EAAS,CAACC,GAAF,mBAAcb,QAWlB,uBAGA,2B,+BCyBGc,EA5C2C,SAAC,GAUtD,EARGC,KAQF,IAPEjB,EAOH,EAPGA,SAAUkB,EAOb,EAPaA,aACVC,EAMH,EANGA,WAAYC,EAMf,EANeA,QACZzB,EAKH,EALGA,MACAvC,EAIH,EAJGA,UAAWiE,EAId,EAJcA,cAERC,EAEN,6GAeKC,EAAkB,UAAMtD,IAAE0B,MAAR,YAAiB0B,GAAgC,IACnEG,EAAmB,UAAMvD,IAAEwD,MAAR,YAAiB9B,EAAO1B,IAAEyD,WAAazD,IAAE0D,WAAzC,YAAuDvE,GAGhF,OACI,qCACI,mCACI6D,KAAM,OACNjB,SAtBa,SAACO,GACtBP,GACGA,EAASO,GAEZW,GAAgBA,EAAaX,EAAEE,cAAcV,QAmBrCoB,WAjBe,SAACZ,GAExBY,GAAcA,EAAWZ,GACzBa,GACa,UAAVb,EAAEqB,KACFR,KAaKhE,UAAWoE,GAEPF,IAEP3B,GAAS,sBAAMvC,UAAWmE,EAAjB,SAAsC5B,Q,kCC1B7CkC,EAlBqC,SAAC,GAK/C,IAHEC,EAGH,EAHGA,IAAK1E,EAGR,EAHQA,UACFkE,EAEN,mCACKS,EAAc,UAAM9D,IAAEG,OAAR,YAAkB0D,EAAM7D,IAAE6D,IAAM7D,IAAE+D,QAAlC,YAA6C5E,GAIjE,OACI,oCACIA,UAAW2E,GACPT,K,iBCqBDW,EAjCyC,SAAC,GASpD,EAPGhB,KAOF,IANEjB,EAMH,EANGA,SAAUkC,EAMb,EANaA,gBACV9E,EAKH,EALGA,UACA+E,GAIH,EALcd,cAKd,EAJGc,UAEGb,EAEN,4FAQKE,EAAmB,UAAMvD,IAAEmE,SAAR,YAAoBhF,GAAwB,IAErE,OACI,kCACI,mCACI6D,KAAM,WACNjB,SAba,SAACO,GACtBP,GAAYA,EAASO,GAErB2B,GAAmBA,EAAgB3B,EAAEE,cAAc4B,UAW3CjF,UAAWoE,GAEPF,IAEPa,GAAY,sBAAM/E,UAAWa,IAAEoD,cAAnB,SAAmCc,QCwC7CG,MAzEf,WAAgB,IAAD,EACarD,mBAAiB,IAD9B,mBACJrB,EADI,KACE2E,EADF,KAEL5C,EAAQ/B,EAAO,GAAK,QAEpB4E,EAAY,WACV7C,EACAgB,MAAM,gFAENA,MAAM/C,IARH,EAYmBqB,oBAAkB,GAZrC,mBAYJoD,EAZI,KAYKI,EAZL,KAeX,OACI,gCACI,uBADJ,cAII,sBAAKrF,UAAWa,IAAEyE,OAAlB,UACI,cAAC,EAAD,CACI3C,MAAOnC,EACPsD,aAAcqB,EACdnB,QAASoB,EACT7C,MAAOA,IAIX,cAAC,EAAD,CACIvC,UAAWa,IAAE0E,OAKjB,cAAC,EAAD,sBAIA,cAAC,EAAD,CACIb,KAAG,EACHzD,QAASmE,EAFb,qBAOA,cAAC,EAAD,CAAaI,UAAQ,EAArB,sBAMA,cAAC,EAAD,CACIP,QAASA,EACTH,gBAAiBO,EAFrB,wBAQA,cAAC,EAAD,CAAeJ,QAASA,EAASrC,SA/CxB,SAACO,GAAD,OAAsCkC,EAAWlC,EAAEE,cAAc4B,eAkD9E,uBAKA,2B,kBCGGQ,GAzD4C,SAAC,GASvD,EAPGC,UAOF,IANEC,EAMH,EANGA,OACA3B,EAKH,EALGA,QACA4B,EAIH,EAJGA,UAEG1B,EAEN,8DAC+BrC,oBAAkB,GADjD,mBACMgE,EADN,KACgBC,EADhB,OAE8DF,GAAa,GAArEb,EAFN,EAEMA,SAAUgB,EAFhB,EAEgBA,cAAe/F,EAF/B,EAE+BA,UAAcgG,EAF7C,wDAoBK/B,EAAa,UAAMgC,KAAMC,UAAZ,YAAyBlG,GAE5C,OACI,mCACK6F,EAEO,cAAC,EAAD,aACIH,WAAS,EACTC,OAnBG,SAACxC,GAEpB2C,GAAY,GACZH,GAAUA,EAAOxC,IAiBDa,QAzBI,WAEpB8B,GAAY,GACZ9B,GAAWA,MAwBSE,IAGR,+CACI6B,cArBU,SAAC5C,GAE3B2C,GAAY,GACZC,GAAiBA,EAAc5C,IAmBfnD,UAAWiE,GACP+B,GAHR,cAMMjB,GAAYb,EAAUvB,MAN5B,uBC7Db,SAASwD,GAAa3B,EAAa4B,GACtC,IAAMC,EAAgBC,KAAKC,UAAUH,GACrCI,aAAaC,QAAQjC,EAAK6B,GAIvB,SAASK,GAAgBlC,EAAamC,GACzC,IAAIP,EAAQO,EACNN,EAAgBG,aAAaI,QAAQpC,GAE3C,OADsB,OAAlB6B,IAAwBD,EAAQE,KAAKO,MAAMR,IACxCD,EAWXD,GAAqB,OAAQ,CAACW,EAAG,IAAKC,EAAG,IAGhBL,GAAwB,OAAQ,CAACI,EAAG,GAAIC,EAAG,ICcrDC,OAnCf,WAAgB,IAAD,EACenF,mBAAiB,IADhC,mBACJc,EADI,KACGsE,EADH,KAWX,OACI,gCACI,uBADJ,cAKI,8BACI,cAAC,GAAD,CACItE,MAAOA,EACPmB,aAAcmD,EACdrB,UAAW,CAACb,SAAUpC,OAAQuE,EAAY,+BAGlD,cAAC,EAAD,CAAajG,QArBR,WACTkF,GAAkB,sBAAuBxD,IAoBrC,kBACA,cAAC,EAAD,CAAa1B,QAnBL,WAEZgG,EAASP,GAAa,sBAAuB/D,KAiBzC,qBAEA,uBAGA,2BCfGwE,OAbf,WACI,OACI,gCACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,GAAD,Q,SCRNC,GAA0B,CAC5BC,WAAW,GAgBFC,GAAY,SAACD,GACtB,MAAO,CAACxD,KAAM,aAAcwD,cCxBjB,OAA0B,oCCiD1BE,OA1Cf,WAEI,IAAMC,EAAWC,eACXJ,EAAYK,cAAmC,SAAAtB,GAAK,OAAIA,EAAMuB,QAAQN,aAe5E,OACI,gCACI,uBADJ,eAKKA,EAEO,8BAAK,qBAAKlH,IAAKyH,GAAcvH,IAAI,oBAEjC,8BACI,cAAC,EAAD,CAAaY,QAvBd,WACfuG,EAASF,IAAU,IAEnB,IAAMO,EAAQC,YAAW,WACrBN,EAASF,IAAU,IACnBS,aAAaF,KACd,KAGHG,QAAQC,IAAI,eAcI,8BAKZ,uBAGA,2B,oBCFGC,GA9BmC,SAAC,GAQ9C,EANGrE,KAMF,IALEjB,EAKH,EALGA,SAAUuF,EAKb,EALaA,cACVnI,EAIH,EAJGA,UAEGkE,EAEN,+DAOKkE,EAAmB,UAAMvH,KAAEwH,MAAR,YAAiBrI,GAAwB,IAElE,OACI,mCACI,mCACI6D,KAAM,QACNjB,SAZa,SAACO,GACtBP,GAAYA,EAASO,GAErBgF,GAAiBA,GAAehF,EAAEE,cAAcV,QAUxC3C,UAAWoI,GAEPlE,OCbLoE,GAf+C,SAAC,GAK1D,EAHGH,cAGH,EAHkBxF,MAMnB,OACI,oDCuBO4F,OApCf,WAAiB,IAAD,EACgB1G,mBAAS,GADzB,mBACL2G,EADK,aAEgB3G,mBAAS,MAFzB,mBAEL4G,EAFK,KAKZ,OALY,KAMR,gCACI,uBADJ,eAKI,gCACI,+BAAOD,IACP,cAAC,GAAD,OAMJ,gCACI,+BAAOA,IACP,cAAC,GAAD,IAGA,+BAAOC,OAGX,uBAIA,2BCJGC,GAtBqC,SAAC,GAM/C,IAJEC,EAIH,EAJGA,QACA/F,EAGH,EAHGA,SAAUgG,EAGb,EAHaA,eACP1E,EAEN,uDACK2E,EAA+BF,EAAUA,EAAQpH,KAAI,SAACuH,EAAIC,GAAL,OAAe,wBACQpG,MAAOmG,EADf,SACoBA,GADPA,EAAK,IAAMC,MACY,GAO9G,OACI,gDAAQnG,SANa,SAACO,GACtBP,GAAYA,EAASO,GACrByF,GAAkBA,EAAezF,EAAEE,cAAcV,SAITuB,GAAxC,aACK2E,MCiBEG,GAlCmC,SAAC,GAO9C,EALGnF,KAKF,IALQtD,EAKT,EALSA,KACNoI,EAIH,EAJGA,QAAShG,EAIZ,EAJYA,MACTC,EAGH,EAHGA,SAAUgG,EAGb,EAHaA,eAIRK,GADL,6EACwB,SAAC9F,GACtBP,GAAYA,EAASO,GACrByF,GAAkBA,EAAezF,EAAEE,cAAcV,SAI/CkG,EAA+BF,EAAUA,EAAQpH,KAAI,SAAC2H,EAAGC,GAAJ,OACvD,kCACI,uBACItF,KAAM,QACNtD,KAAMA,EACN0E,QAASiE,IAAMvG,EACfA,MAAOuG,EACPtG,SAAUqG,IAEbC,IARO3I,EAAO,IAAM4I,MAUxB,GAEL,OACI,mCACKN,KClCPO,GAAM,CAAC,IAAK,IAAK,KA+BRC,OA7Bf,WAAgB,IAAD,EACqBxH,mBAASuH,GAAI,IADlC,mBACJzG,EADI,KACGiG,EADH,KAGX,OACI,gCACI,uBADJ,cAII,8BACI,cAAC,GAAD,CACID,QAASS,GACTzG,MAAOA,EACPiG,eAAgBA,MAGxB,8BACI,cAAC,GAAD,CACIrI,KAAM,QACNoI,QAASS,GACTzG,MAAOA,EACPiG,eAAgBA,MAIxB,2BC4BGU,OAvDf,WAAkB,IAAD,EACiBzH,mBAAiB,GADlC,mBACN0H,EADM,KACGC,EADH,OAEW3H,qBAFX,mBAEN4H,EAFM,KAEAC,EAFA,OAGW7H,oBAAkB,GAH7B,mBAGN8H,EAHM,KAGAC,EAHA,KA0BPC,GAAiB,OAAJJ,QAAI,IAAJA,OAAA,EAAAA,EAAMK,uBAAwB,uBAC3CC,GAAiB,OAAJN,QAAI,IAAJA,OAAA,EAAAA,EAAMO,uBAAwB,uBAEjD,OACI,gCACI,qBACIC,aAfS,WAEjBL,GAAQ,IAcAM,aAZS,WAEjBN,GAAQ,IAQJ,SAIKC,IAGJF,EACG,8BAAMI,IACJ,uBAQN,cAAC,EAAD,CAAa9I,QAvCP,WACV,IAAMkJ,EAAaC,OAAOC,aAAY,WAElCX,EAAQ,IAAIY,QACb,KACHd,EAAWW,IAkCP,mBACA,cAAC,EAAD,CAAalJ,QA5CR,WAETsJ,cAAchB,IA0CV,sBChCGiB,OAjBf,WACI,OACI,gCACI,uBADJ,cAKI,cAAC,GAAD,IAEA,uBAGA,2BCTCC,GAAkB,SAACrE,EAAsBsE,GAClD,OAAQA,EAAO7G,MACX,IAAK,OACD,IAAM8G,EAAW,YAAIvE,GAAOwE,MAAK,SAACpJ,EAAGqJ,GACjC,OAAIrJ,EAAEjB,KAAOsK,EAAEtK,KAAa,EACnBiB,EAAEjB,KAAOsK,EAAEtK,MAAc,EACtB,KAEhB,MAA0B,OAAnBmK,EAAOI,QAAmBH,EAAWA,EAASI,UAEzD,IAAK,QACD,OAAO3E,EAAMpE,QAAO,SAAAR,GAAC,OAAIA,EAAEwJ,KAAON,EAAOI,WAC7C,QACI,OAAO1E,ICNb6E,GAAmC,CACrC,CAAC9J,IAAK,EAAGZ,KAAM,qBAAOyK,IAAK,GAC3B,CAAC7J,IAAK,EAAGZ,KAAM,yDAAayK,IAAK,IACjC,CAAC7J,IAAK,EAAGZ,KAAM,2BAAQyK,IAAK,IAC5B,CAAC7J,IAAK,EAAGZ,KAAM,uCAAUyK,IAAK,IAC9B,CAAC7J,IAAK,EAAGZ,KAAM,6CAAWyK,IAAK,IAC/B,CAAC7J,IAAK,EAAGZ,KAAM,iCAASyK,IAAK,KA+ClBE,OA5Cf,WAAgB,IAAD,EACiBrJ,mBAAcoJ,IAD/B,mBACJE,EADI,KACIC,EADJ,KAILC,EAAcF,EAAO5J,KAAI,SAAC+J,GAAD,OAC3B,sBAAKrF,MAAO,CACRsF,MAAO,QACPC,OAAQ,YACRC,QAAS,OACTC,eAAgB,gBAChBC,OAAQ,QALZ,UAOI,8BAAML,EAAE/K,OACR,8BAAM+K,EAAEN,QAFJM,EAAEnK,QAUd,OACI,gCACI,uBADJ,cAKKkK,EAED,sBAAKpF,MAAO,CAACwF,QAAS,OAAQC,eAAgB,cAA9C,UACI,8BAAK,cAAC,EAAD,CAAazK,QAbf,kBAAMmK,EAAUX,GAAgBQ,GAAe,CAACpH,KAAM,OAAQiH,QAAS,SAarE,uBACL,8BAAK,cAAC,EAAD,CAAa7J,QAbb,kBAAMmK,EAAUX,GAAgBQ,GAAe,CAACpH,KAAM,OAAQiH,QAAS,WAavE,yBACL,8BAAK,cAAC,EAAD,CAAa7J,QAbd,kBAAMmK,EAAUX,GAAgBQ,GAAe,CAACpH,KAAM,QAASiH,QAAS,OAavE,gCAIT,uBAGA,2BCrCG3D,OAbf,WACI,OACI,yCAEI,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,Q,oBCjBNC,GAAiB,GCOjBwE,GAA2B,CAAC,OAAQ,MAAO,QAqDlCC,GAjDkBC,IAAMC,MAAK,YAIvC,EAFGpJ,MAEF,IAFSpC,EAEV,EAFUA,KAAMqC,EAEhB,EAFgBA,SAGX4E,EAAWC,eACXuE,EAAQtE,cAA+B,SAAAtB,GAAK,OAAIA,EAAM4F,SAMtD/C,EAAmB,SAAC9F,GACtBP,GAAYA,EAASO,GACrBqE,EDPG,CAAC3D,KAAM,eAAgBoI,WCOH9I,EAAEE,cAAcV,SAIrCuJ,EAAoBN,GAASA,GAAOrK,KAAI,SAAC4K,EAAIhD,GAAL,OAC1C,kCACI,uBACItF,KAAM,QACNtD,KAAMA,EACNoC,MAAOwJ,EACPlH,QAASkH,IAAOH,EAChBpJ,SAAUqG,IAMbkD,IAZOA,EAAK,IAAMhD,MActB,GAEL,OACI,sBAAKnJ,UAAWa,KAAEmL,GAAlB,UACI,uBACA,sBAAMhM,UAAWa,KAAEmL,EAAQ,SAA3B,0BAGCE,EAGD,6B,sCCtDNE,G,QAAWC,EAAMC,OAAO,CAACC,QAAS,0CAE3BC,GAAU,SACdC,GACD,OAAQL,GAASlM,KAA8B,YAAauM,ICuBrDC,OA1Bf,WAAoB,IAAD,EACiB7K,oBAAS,GAD1B,mBACRmD,EADQ,KACE2H,EADF,OAES9K,mBAAS,IAFlB,mBAER+K,EAFQ,KAEFC,EAFE,KAQTC,EAAgB,yCAAG,6BAAAtL,EAAA,+EAEWgL,GAAa,CAACO,QAAS/H,IAFlC,OAEXgI,EAFW,OAGjBH,EAAQG,EAAS1L,KAAK2L,MAHL,gDAKjBJ,EAAQ,KAAMvM,SALG,yDAAH,qDAStB,OACI,gCACI,uBAAOuD,KAAK,WAAWoB,QAASD,EAAUpC,SAf7B,SAACO,GAClBwJ,EAAYxJ,EAAEE,cAAc4B,YAexB,uBAAOpB,KAAK,SAASlB,MAAO,OAAQ1B,QAAS6L,IAC7C,8BAAMF,QCXHM,OAXf,WAEI,OACI,gCACI,uBACA,cAAC,GAAD,IACA,2BCSG/F,OAVf,WACI,OACI,6CAEI,cAAC,GAAD,IACA,cAAC,GAAD,QCNCgG,GACG,cADHA,GAGD,UAHCA,GAII,eA4BFC,OAvBf,WACI,OACI,8BAEI,eAAC,IAAD,WAII,cAAC,IAAD,CAAOC,KAAM,IAAKC,OAAK,EAACC,OAAQ,kBAAM,cAAC,IAAD,CAAUC,GAAIL,QAEpD,cAAC,IAAD,CAAOE,KAAMF,GAAiBI,OAAQ,kBAAM,cAAC,GAAD,OAC5C,cAAC,IAAD,CAAOF,KAAMF,GAAaI,OAAQ,kBAAM,cAACE,GAAD,OACxC,cAAC,IAAD,CAAOJ,KAAMF,GAAkBI,OAAQ,kBAAM,cAACG,GAAD,OARjD,gBAYI,cAAC,IAAD,CAAOH,OAAQ,kBAAM,cAAC,EAAD,aCdtBI,OAbf,WACI,OACI,sBAAK3N,UAAWa,IAAE+M,OAAlB,UACI,cAAC,IAAD,CAASJ,GAAIL,GAAiBnN,UAAWa,IAAEgN,KAAMC,gBAAiBjN,IAAEkN,OAApE,wBACA,cAAC,IAAD,CAASP,GAAIL,GAAanN,UAAWa,IAAEgN,KAAMC,gBAAiBjN,IAAEkN,OAAhE,oBACA,cAAC,IAAD,CAASP,GAAIL,GAAkBnN,UAAWa,IAAEgN,KAAMC,gBAAiBjN,IAAEkN,OAArE,yBAEC,qBAAK/N,UAAWa,IAAEmN,MAAlB,sBCKEC,OAZf,WACI,OACI,8BAEI,eAAC,IAAD,WACI,cAAC,GAAD,IACA,cAAC,GAAD,UCEDC,OATf,WACI,OACI,sBAAKlO,UAAWa,IAAEqN,IAAlB,UACI,mDACA,cAAC,GAAD,QCIQC,QACa,cAA7B/D,OAAOgE,SAASC,UAEa,UAA7BjE,OAAOgE,SAASC,UAEhBjE,OAAOgE,SAASC,SAASC,MACrB,2D,aCbFC,GAAcC,aAAgB,CAChC7G,QzBQ0B,WAAyE,IAAxEvB,EAAuE,uDAAjDgB,GAAWsD,EAAsC,uCAClG,OAAQA,EAAO7G,MACX,IAAK,aACD,OAAO,2BAAIuC,GAAX,IAAkBiB,UAAUqD,EAAOrD,YACvC,QACI,OAAOjB,IyBZf4F,MXEwB,WAAgF,IAA/E5F,EAA8E,uDAA1DgB,GAAWsD,EAA+C,uCACnG,OAAQA,EAAO7G,MACX,IAAK,eACD,OAAO6G,EAAOuB,WAClB,QACI,OAAO7F,MWHjBqI,GAAQC,aAAYH,IAEXE,MAKfrE,OAAOqE,MAAQA,GCVfE,IAASpB,OACL,cAAC,IAAMqB,WAAP,UACI,cAAC,KAAD,CAAUH,MAAOA,GAAjB,SACI,cAAC,GAAD,QAGRI,SAASC,eAAe,SF6HpB,kBAAmBC,WACnBA,UAAUC,cAAcC,MACnBC,MAAK,SAAAC,GACFA,EAAaC,gBAEhBC,OAAM,SAAA9M,GACHyF,QAAQzF,MAAMA,EAAMjC,a,kBGhJpCX,EAAOC,QAAU,CAAC,KAAO,qBAAqB,OAAS,uBAAuB,MAAQ,sBAAsB,OAAS,0B","file":"static/js/main.94317610.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Message_post___JC2T\",\"message\":\"Message_message__2vc77\",\"name\":\"Message_name__3yW3V\",\"text\":\"Message_text__1niNb\",\"time\":\"Message_time__23QRG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"affair\":\"Affair_affair__gY0QY\",\"name\":\"Affair_name__1fnOb\",\"priority\":\"Affair_priority__1at0Y\",\"button\":\"Affair_button__16-LD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__EWJQ2\",\"superInput\":\"SuperInputText_superInput__3t-XN\",\"errorInput\":\"SuperInputText_errorInput__3Xlr7\",\"error\":\"SuperInputText_error__l4iMp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2BNji\",\"red\":\"SuperButton_red__DkIKn\",\"button\":\"SuperButton_button__3xQvG\",\"blink\":\"SuperButton_blink__2XDBH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__1cfrW\",\"error\":\"Greeting_error__XMDPM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__9CN8a\",\"column\":\"HW4_column__1JRRT\",\"testSpanError\":\"HW4_testSpanError__3XTqG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1Pv4a\",\"spanClassName\":\"SuperCheckbox_spanClassName__-VOA5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dark\":\"HW12_dark__2zqdv\",\"dark-text\":\"HW12_dark-text__2c-hi\",\"red\":\"HW12_red__nBBUp\",\"red-text\":\"HW12_red-text__iATN-\",\"some\":\"HW12_some__1qcli\",\"some-text\":\"HW12_some-text__25czW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2jiJV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"Affairs_buttons__1cpLu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spanStyle\":\"SuperEditableSpan_spanStyle__3x5rL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"range\":\"SuperRange_range__1fnvR\"};","import React from 'react'\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div>\r\n            <div>404</div>\r\n            <div>Page not found!</div>\r\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404\r\n","import React from 'react';\r\nimport classes from './Message.module.css'\r\n\r\n\r\ntype MessagePropsType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\nconst Message = (props: MessagePropsType) => {\r\n    return (\r\n        <div className={classes.post}>\r\n            <img src={props.avatar} alt=\"Avatar\"/>\r\n            <div className={classes.message}>\r\n                <div className={classes.name}>{props.name}</div>\r\n                <div className={classes.text}>{props.message}</div>\r\n                <div className={classes.time}>{props.time}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;\r\n","import React from 'react'\r\nimport Message from './Message';\r\n\r\nconst messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Some Name',\r\n    message: 'some text',\r\n    time: '22:00',\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n            <hr/>\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React from 'react'\r\nimport {AffairType} from \"./HW2\";\r\nimport s from './Affair.module.css'\r\n\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType // need to fix any\r\n    deleteAffairCallback: (id: number) => void // need to fix any\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n\r\n\r\n    const deleteCallback = () => {\r\n        props.deleteAffairCallback(props.affair._id)\r\n    } // need to fix\r\n\r\n    return (\r\n        <div className={s.affair}>\r\n            <span className={s.name}> {props.affair.name}</span>\r\n            <span className={s.priority}>  {props.affair.priority}</span>\r\n            <button className={s.button} onClick={deleteCallback}>X</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\nimport s from './Affairs.module.css'\r\n\r\nexport type AffairsPropsType = { // need to fix any\r\n    data: Array<AffairType>\r\n    setFilter: (filter: FilterType) => void\r\n    deleteAffairCallback: (id: number) => void\r\n    filter: FilterType\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {\r\n        props.setFilter('all')\r\n    } // need to fix\r\n    const setHigh = () => {\r\n        props.setFilter('high')\r\n    }\r\n    const setMiddle = () => {\r\n        props.setFilter('middle')\r\n    }\r\n    const setLow = () => {\r\n        props.setFilter('low'  )\r\n    }\r\n    return (\r\n        <div className={s.buttons}>\r\n            {mappedAffairs}\r\n            <button onClick={setAll}>All</button>\r\n            <button onClick={setHigh}>High</button>\r\n            <button onClick={setMiddle}>Middle</button>\r\n            <button onClick={setLow}>Low</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\n\r\n// types\r\nexport type AffairPriorityType = 'high' | 'low' | 'middle' // need to fix any\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: string\r\n} // need to fix any\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): any => { // need to fix any\r\n    if (filter === 'all') return affairs\r\n    else return affairs.filter(a => a.priority === filter)// need to fix\r\n}\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): any => { // need to fix any\r\n    return affairs.filter(a => a._id !== _id)\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n                filter={filter}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React from 'react'\r\nimport s from './Greeting.module.css'\r\nimport {v1} from \"uuid\";\r\n\r\ntype GreetingPropsType = {\r\n    name: string\r\n    setNameCallback: any\r\n    addUser: () => void\r\n    error: string // need to fix any\r\n    totalUsers: number\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers,} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = error? s.error : s.someClass // need to fix with (?:)\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                value={name}\r\n                onChange={setNameCallback}\r\n                className={inputClass}\r\n            />\r\n            <span>{error}</span>\r\n            <button onClick={addUser}>addUsers</button>\r\n            <span>{totalUsers}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n\r\n// const addItem = () => {\r\n//     if (title.trim() !== \"\") {\r\n//         props.addItem(title);\r\n//         setTitle(\"\");\r\n//     } else {\r\n//         setError(\"Title is required\");\r\n//     }\r\n// }\r\n\r\n// const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n//     setTitle(e.currentTarget.value)\r\n// }\r\n//\r\n// const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n//     if (error !== null) {\r\n//         setError(null);\r\n//     }\r\n//     if (e.charCode === 13) {\r\n//         addItem();\r\n//     }","import React, {ChangeEvent, KeyboardEventHandler, useState} from 'react'\r\nimport Greeting from './Greeting'\r\n\r\nimport {UserType} from \"./HW3\";\r\n\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType>\r\n    addUserCallback: (name: string) => void\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    let [name, setName] = useState<string>('') // need to fix any\r\n    let [error, setError] = useState<any>('') // need to fix any\r\n\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const trimName = e.currentTarget.value.trim()// need to fix\r\n        if (trimName) {\r\n            setName(trimName)\r\n            setError('')\r\n        } else {\r\n            setError('need name')\r\n        }\r\n    }\r\n    const addUser = () => {\r\n        addUserCallback(name)\r\n        alert(`'Hello', ${name}`)\r\n        setName('')\r\n    }\r\n\r\n\r\n    const totalUsers = users.length // need to fix\r\n\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport {v1} from \"uuid\";\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string\r\n    name: string\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<any>([\r\n        {_id: v1(), name: 'Kate'},\r\n        {_id: v1(), name: 'Artem'},\r\n        {_id: v1(), name: 'Igor'},\r\n    ])\r\n\r\n    const addUserCallback = (name: string) => { // need to fix any\r\n        let newUser: UserType = {_id: v1(), name}\r\n        setUsers([newUser, ...users]) // need to fix\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n\r\n        onKeyPress && onKeyPress(e);\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.input} ${error? s.errorInput : s.superInput} ${className}`\r\n    // const finalInputClassName = `${s.errorInput} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${s.button} ${red ? s.red : s.default} ${className}`\r\n\r\n    // const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    // spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\r\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\r\nimport style from './SuperEditableSpan.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n}\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\r\n\r\n    const onEnterCallback = () => {\r\n        // setEditMode() // выключить editMode при нажатии Enter\r\n        setEditMode(false)\r\n        onEnter && onEnter()\r\n    }\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        // setEditMode() // выключить editMode при нажатии за пределами инпута\r\n        setEditMode(false)\r\n        onBlur && onBlur(e)\r\n    }\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        // setEditMode() // включить editMode при двойном клике\r\n        setEditMode(true)\r\n        onDoubleClick && onDoubleClick(e)\r\n    }\r\n\r\n    const spanClassName = `${style.spanStyle} ${className}`\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <SuperInputText\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={spanClassName}\r\n                        {...restSpanProps}\r\n                    >\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                         {children || restProps.value} ✏️\r\n                    </span>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperEditableSpan\r\n","// вот вам функция для сохранения объектов в память браузера\r\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\r\nexport function saveState<T>(key: string, state: T) {\r\n    const stateAsString = JSON.stringify(state)\r\n    localStorage.setItem(key, stateAsString)\r\n}\r\n\r\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n    let state = defaultState\r\n    const stateAsString = localStorage.getItem(key)\r\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\r\n    return state\r\n}\r\n\r\n// ---------------------------------------------------------------------------------------------------------------\r\n// пример использования:\r\ntype StateType = {\r\n    x: string\r\n    y: number\r\n}\r\n\r\n// сохраняем объект типа StateType в ячейке 'test'\r\nsaveState<StateType>('test', {x: 'A', y: 1})\r\n\r\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\r\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\r\n","import React, {useState} from 'react'\r\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\nimport {restoreState, saveState} from './localStorage/localStorage'\r\n\r\nfunction HW6() {\r\n    const [value, setValue] = useState<string>('')\r\n\r\n    const save = () => {\r\n        saveState<string>('editable-span-value', value)\r\n    }\r\n    const restore = () => {\r\n        // setValue()\r\n        setValue(restoreState('editable-span-value', value))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 6\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperEditableSpan\r\n                    value={value}\r\n                    onChangeText={setValue}\r\n                    spanProps={{children: value ? undefined : 'double click to edit...'}}\r\n                />\r\n            </div>\r\n            <SuperButton onClick={save}>save</SuperButton>\r\n            <SuperButton onClick={restore}>restore</SuperButton>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperEditableSpan/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW6\r\n","import React from 'react'\r\nimport HW1 from '../../h1/HW1'\r\nimport HW2 from '../../h2/HW2'\r\nimport HW3 from '../../h3/HW3'\r\nimport HW4 from '../../h4/HW4'\r\nimport HW6 from \"../../h6/HW6\";\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            <HW6/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PreJunior\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","\r\n\r\n type InitStateType = {\r\n    isLoading:boolean\r\n}\r\n\r\nconst initState:InitStateType = {\r\n    isLoading: false\r\n}\r\n\r\n\r\n\r\ntype ActionType = ReturnType<typeof loadingAC>\r\n\r\nexport const loadingReducer = (state:InitStateType = initState, action: ActionType): InitStateType => { // fix any\r\n    switch (action.type) {\r\n        case \"IS-LOADING\":\r\n            return {...state, isLoading:action.isLoading}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const loadingAC = (isLoading:boolean) => {\r\n    return {type: 'IS-LOADING', isLoading}\r\n} // fix any","export default __webpack_public_path__ + \"static/media/loading.50c7519c.gif\";","import React, {useState} from 'react'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"./bll/store\";\r\nimport {loadingAC} from \"./bll/loadingReducer\";\r\nimport preloaderGif from './common/loading.gif'\r\n\r\nfunction HW10() {\r\n    // useSelector, useDispatch\r\n    const dispatch = useDispatch();\r\n    const isLoading = useSelector<AppStoreType, boolean>(state => state.loading.isLoading)\r\n\r\n\r\n    const setLoading = () => {\r\n        dispatch(loadingAC(true))\r\n        // setTimeout\r\n        const start = setTimeout(() => {\r\n            dispatch(loadingAC(false))\r\n            clearTimeout(start)\r\n        }, 2000)\r\n\r\n\r\n        console.log('loading...')\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 10\r\n\r\n            {/*should work (должно работать)*/}\r\n            {isLoading\r\n                ? (\r\n                    <div><img src={preloaderGif} alt=\"preloader.gif\"/></div>\r\n                ) : (\r\n                    <div>\r\n                        <SuperButton onClick={setLoading}>set loading...</SuperButton>\r\n                    </div>\r\n                )\r\n            }\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<Alternative/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW10\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperRange.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperRangePropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeRange?: (value: number) => void\r\n};\r\n\r\nconst SuperRange: React.FC<SuperRangePropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeRange,\r\n        className,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e) // сохраняем старую функциональность\r\n\r\n        onChangeRange && onChangeRange(+e.currentTarget.value)\r\n    }\r\n\r\n    const finalRangeClassName = `${s.range} ${className ? className : ''}`\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'range'}\r\n                onChange={onChangeCallback}\r\n                className={finalRangeClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperRange\r\n","import React from 'react'\r\n\r\ntype SuperDoubleRangePropsType = {\r\n    onChangeRange?: (value: [number, number]) => void\r\n    value?: [number, number]\r\n    // min, max, step, disable, ...\r\n}\r\n\r\nconst SuperDoubleRange: React.FC<SuperDoubleRangePropsType> = (\r\n    {\r\n        onChangeRange, value,\r\n        // min, max, step, disable, ...\r\n    }\r\n) => {\r\n    // сделать самому, можно подключать библиотеки\r\n\r\n    return (\r\n        <>\r\n            DoubleRange\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperDoubleRange\r\n","import React, {useState} from 'react'\r\nimport SuperRange from './common/c7-SuperRange/SuperRange'\r\nimport SuperDoubleRange from './common/c8-SuperDoubleRange/SuperDoubleRange'\r\n\r\nfunction HW11() {\r\n    const [value1, setValue1] = useState(0)\r\n    const [value2, setValue2] = useState(100)\r\n\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 11\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <span>{value1}</span>\r\n                <SuperRange\r\n                    // сделать так чтоб value1 изменялось\r\n\r\n                />\r\n            </div>\r\n\r\n            <div>\r\n                <span>{value1}</span>\r\n                <SuperDoubleRange\r\n                    // сделать так чтоб value1 и value2 изменялось\r\n                />\r\n                <span>{value2}</span>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperRange/>*/}\r\n            {/*<AlternativeSuperDoubleRange/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW11\r\n","import React, {ChangeEvent, DetailedHTMLProps, SelectHTMLAttributes} from 'react'\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const mappedOptions: JSX.Element[] = options ? options.map((el, index) => <option key={el + '-' + index}\r\n                                                                                      value={el}>{el}</option>) : []\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeOption && onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <select onChange={onChangeCallback} {...restProps}>\r\n            {mappedOptions}\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default SuperSelect\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type, name,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeOption && onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n\r\n    const mappedOptions: JSX.Element[] = options ? options.map((o, i) => (\r\n        <label key={name + '-' + i}>\r\n            <input\r\n                type={'radio'}\r\n                name={name}\r\n                checked={o === value}\r\n                value={o}\r\n                onChange={onChangeCallback}\r\n            />\r\n            {o}\r\n        </label>\r\n    )) : []\r\n\r\n    return (\r\n        <>\r\n            {mappedOptions}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperRadio\r\n","import React, {useState} from 'react'\r\nimport SuperSelect from './common/c5-SuperSelect/SuperSelect'\r\nimport SuperRadio from './common/c6-SuperRadio/SuperRadio'\r\n\r\nconst arr = ['x', 'y', 'z']\r\n\r\nfunction HW7() {\r\n    const [value, onChangeOption] = useState(arr[1])\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 7\r\n\r\n            <div>\r\n                <SuperSelect\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n            <div>\r\n                <SuperRadio\r\n                    name={'radio'}\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW7\r\n","import React, {useState} from 'react'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\n\r\nfunction Clock() {\r\n    const [timerId, setTimerId] = useState<number>(0)\r\n    const [date, setDate] = useState<Date>()\r\n    const [show, setShow] = useState<boolean>(false)\r\n\r\n    const stop = () => {\r\n        // stop\r\n        clearInterval(timerId)\r\n    }\r\n    const start = () => {\r\n        const id: number = window.setInterval(() => {\r\n            // setDate\r\n            setDate(new Date())\r\n        }, 1000)\r\n        setTimerId(id)\r\n    }\r\n\r\n    const onMouseEnter = () => {\r\n        // show\r\n        setShow(true)\r\n    }\r\n    const onMouseLeave = () => {\r\n        // closes\r\n        setShow(false)\r\n    }\r\n\r\n    const stringTime = date?.toLocaleTimeString() || <br/>\r\n    const stringDate = date?.toLocaleDateString() || <br/>\r\n\r\n    return (\r\n        <div>\r\n            <div\r\n                onMouseEnter={onMouseEnter}\r\n                onMouseLeave={onMouseLeave}\r\n            >\r\n                {stringTime}\r\n            </div>\r\n\r\n            {show ?\r\n                <div>{stringDate}</div>\r\n                : <br/>\r\n            }\r\n            {/*{show && (*/}\r\n            {/*    <div>*/}\r\n            {/*        {stringDate}*/}\r\n            {/*    </div>*/}\r\n            {/*)}*/}\r\n\r\n            <SuperButton onClick={start}>start</SuperButton>\r\n            <SuperButton onClick={stop}>stop</SuperButton>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Clock\r\n","import React from 'react'\r\nimport Clock from './Clock'\r\n\r\nfunction HW9() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 9\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Clock/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeClock/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW9\r\n","import {PeopleType} from \"../HW8\";\r\n\r\n\r\ntype ActionType = { type: 'sort', payload: 'up' | 'down' } | { type: 'check', payload: number }\r\n\r\n\r\nexport const homeWorkReducer = (state: PeopleType [], action: ActionType): PeopleType [] => {\r\n    switch (action.type) {\r\n        case 'sort': {\r\n            const newState = [...state].sort((a, b) => {\r\n                if (a.name > b.name) return 1\r\n                else if (a.name < b.name) return -1\r\n                else return 0\r\n            })\r\n            return action.payload === 'up' ? newState : newState.reverse()\r\n        }\r\n        case \"check\":\r\n            return state.filter(a => a.age >= action.payload)\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const sortNameUp = () => ({type: 'sort', payload: 'up'} as const)\r\nexport const sortChekAge = () => ({type: 'check', payload: Number} as const)","import React, {useState} from 'react'\r\nimport {homeWorkReducer} from './bll/homeWorkReducer'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\n\r\n// export type UserType =\r\n\r\nexport type PeopleType = {\r\n    _id: number\r\n    name: string\r\n    age: number\r\n}\r\n\r\n\r\nconst initialPeople: Array<PeopleType> = [\r\n    {_id: 0, name: 'Кот', age: 3},\r\n    {_id: 1, name: 'Александр', age: 66},\r\n    {_id: 2, name: 'Коля', age: 16},\r\n    {_id: 3, name: 'Виктор', age: 44},\r\n    {_id: 4, name: 'Дмитрий', age: 40},\r\n    {_id: 5, name: 'Ирина', age: 55},\r\n]\r\n\r\nfunction HW8() {\r\n    const [people, setPeople] = useState<any>(initialPeople) // need to fix any\r\n\r\n    // need to fix any\r\n    const finalPeople = people.map((p: PeopleType) => (\r\n        <div style={{\r\n            width: '200px',\r\n            border: '1px solid',\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            margin: '10px'\r\n        }} key={p._id}>\r\n            <div>{p.name}</div>\r\n            <div>{p.age}</div>\r\n        </div>\r\n    ))\r\n\r\n    const sortUp = () => setPeople(homeWorkReducer(initialPeople, {type: 'sort', payload: 'up'}))\r\n    const sortDown = () => setPeople(homeWorkReducer(initialPeople, {type: 'sort', payload: 'down'}))\r\n    const chekAge = () => setPeople(homeWorkReducer(initialPeople, {type: 'check', payload: 18}))\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 8\r\n\r\n            {/*should work (должно работать)*/}\r\n            {finalPeople}\r\n\r\n            <div style={{display: 'flex', justifyContent: 'flex-start'}}>\r\n                <div><SuperButton onClick={sortUp}>sort up</SuperButton></div>\r\n                <div><SuperButton onClick={sortDown}>sort down</SuperButton></div>\r\n                <div><SuperButton onClick={chekAge}>check 18+ age</SuperButton></div>\r\n            </div>\r\n\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativePeople/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW8\r\n","import React from 'react'\r\nimport HW1 from '../../h1/HW1'\r\nimport HW2 from '../../h2/HW2'\r\nimport HW3 from '../../h3/HW3'\r\nimport HW4 from '../../h4/HW4'\r\nimport HW10 from \"../../h10/HW10\";\r\nimport HW11 from \"../../h11/HW11\";\r\nimport HW7 from \"../../h7/HW7\";\r\nimport HW9 from \"../../h9/HW9\";\r\nimport HW8 from \"../../h8/HW8\";\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n            Junior\r\n            <HW7/>\r\n            <HW8/>\r\n            <HW9/>\r\n            <HW10/>\r\n            <HW11/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PreJunior\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import {ThemesType} from \"../HW12\";\r\n\r\nconst initState: any = []\r\n\r\ntype ChangeThemeAT = {\r\n    type: 'CHANGE-THEME'\r\n    colorTheme: string\r\n}\r\n\r\nexport const themeReducer = (state: ThemesType = initState, action: ChangeThemeAT): ThemesType | string => {\r\n        switch (action.type) {\r\n            case \"CHANGE-THEME\":\r\n                return action.colorTheme\r\n            default:\r\n                return state;\r\n        }\r\n    }\r\n;\r\n\r\nexport const changeThemeAC = (colorTheme: string): ChangeThemeAT => {\r\n    return {type: \"CHANGE-THEME\", colorTheme}\r\n};\r\n\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, useEffect, useState} from \"react\";\r\nimport s from \"./HW12.module.css\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../h10/bll/store\";\r\nimport {changeThemeAC} from \"./bll/themeReducer\";\r\n\r\n\r\nexport type ThemesType = 'dark' | 'red' | 'some';\r\n\r\nconst themes:Array<ThemesType> = ['dark', 'red', 'some'];\r\n\r\ntype HW12Type = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\nconst HW12: React.FC<HW12Type> = React.memo((\r\n    {\r\n        value, name, onChange\r\n    }\r\n) => {\r\n    const dispatch = useDispatch();\r\n    const theme = useSelector<AppStoreType, any>(state => state.theme)\r\n\r\n\r\n    // useDispatch, onChangeCallback\r\n\r\n\r\n    const onChangeCallback = (e: any) => {\r\n        onChange && onChange(e)\r\n        dispatch(changeThemeAC(e.currentTarget.value))\r\n    }\r\n\r\n\r\n    const mappedThemes: any = themes ? themes.map((th, i) => (\r\n        <label key={th + '-' + i}>\r\n            <input\r\n                type={'radio'}\r\n                name={name}\r\n                value={th}\r\n                checked={th === theme}\r\n                onChange={onChangeCallback}\r\n\r\n\r\n                // onChange={onChangeCallback}\r\n                // name, checked, value, onChange\r\n            />\r\n            {th}\r\n        </label>\r\n    )) : []\r\n\r\n    return (\r\n        <div className={s[theme]}>\r\n            <hr/>\r\n            <span className={s[theme + '-text']}>\r\n                homeworks 12\r\n            </span>\r\n            {mappedThemes}\r\n            {/*should work (должно работать)*/}\r\n            {/*SuperSelect or SuperRadio*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default HW12;\r\n","import axios, {AxiosResponse} from 'axios'\r\n\r\n\r\nconst instance = axios.create({baseURL: 'https://neko-cafe-back.herokuapp.com/'})\r\n\r\nexport const authAPI = {\r\n    test(body: {success: boolean}) {\r\n        return  instance.post<any, AxiosResponse<any>>('auth/test', body);\r\n    }\r\n}\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport {authAPI} from './api/requestAPI'\r\nimport {Simulate} from 'react-dom/test-utils'\r\n\r\nfunction Request() {\r\n    const [checkbox, setCheckbox] = useState(false)\r\n    const [view, setView] = useState('')\r\n\r\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setCheckbox(e.currentTarget.checked)\r\n    }\r\n\r\n    const handleSendButton = async () => {\r\n        try {\r\n            const response: any = await authAPI.test({success: checkbox})\r\n            setView(response.data.info)\r\n        } catch (error) {\r\n            setView(error.message)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <input type=\"checkbox\" checked={checkbox} onChange={handleChange}/>\r\n            <input type=\"button\" value={'Send'} onClick={handleSendButton}/>\r\n            <div>{view}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Request\r\n","import React from 'react';\r\nimport Request from './Request';\r\n\r\nfunction HW13() {\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            <Request/>\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW13;\r\n","import React from 'react'\r\nimport HW1 from '../../h1/HW1'\r\nimport HW2 from '../../h2/HW2'\r\nimport HW3 from '../../h3/HW3'\r\nimport HW4 from '../../h4/HW4'\r\nimport HW12 from '../../h12/HW12'\r\nimport HW13 from '../../h13/HW13'\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n            JuniorPlus\r\n            <HW12/>\r\n            <HW13/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PreJunior\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from 'react'\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport Error404 from \"./pages/Error404\";\r\nimport PreJunior from \"./pages/PreJunior\";\r\nimport Junior from \"./pages/Junior\";\r\nimport JuniorPlus from \"./pages/JuniorPlus\";\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: '/pre-junior',\r\n    // add paths\r\n    JUNIOR: '/junior',\r\n    JUNIOR_PLUS: '/junior-plus'\r\n\r\n\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            <Switch>\r\n\r\n                {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\r\n                {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\r\n\r\n                <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\r\n                <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\r\n                <Route path={PATH.JUNIOR_PLUS} render={() => <JuniorPlus/>}/>\r\n                // add routes\r\n\r\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n                <Route render={() => <Error404/>}/>\r\n\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react'\r\nimport s from './Header.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {PATH} from \"./Routes\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className={s.header}>\r\n            <NavLink to={PATH.PRE_JUNIOR} className={s.link} activeClassName={s.active}>pre-junior</NavLink>\r\n            <NavLink to={PATH.JUNIOR} className={s.link} activeClassName={s.active}>junior</NavLink>\r\n            <NavLink to={PATH.JUNIOR_PLUS} className={s.link} activeClassName={s.active}>junior plus</NavLink>\r\n\r\n             <div className={s.block}>Menu</div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\nimport Routes from \"./Routes\";\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div>\r\n            {/*в gh-pages лучше работает HashRouter*/}\r\n            <HashRouter>\r\n                <Header/>\r\n                <Routes/>\r\n            </HashRouter>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW5\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            <HW5/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import {combineReducers, createStore } from 'redux'\r\nimport {loadingReducer} from './loadingReducer'\r\nimport {themeReducer} from \"../../h12/bll/themeReducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    loading: loadingReducer,\r\n    theme: themeReducer\r\n\r\n})\r\n\r\nconst store = createStore(rootReducer)\r\n\r\nexport default store\r\n\r\nexport type AppStoreType = ReturnType<typeof rootReducer>\r\n\r\n// @ts-ignore\r\nwindow.store = store // for dev\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./p2-homeworks/h10/bll/store\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Header_link__ALEVJ\",\"active\":\"Header_active__3VYD6\",\"block\":\"Header_block__2GOdG\",\"header\":\"Header_header__1kgb8\"};"],"sourceRoot":""}